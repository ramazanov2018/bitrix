
"use strict";

Chart.register(ChartDataLabels);

(function ($) {
    $(document).ready(function () {
        $('select[name="reg"]').select2({
            placeholder: "Регион проведения экзаменов"
        });
        $('select[name="loc"]').select2({
            placeholder: "Место проведения экзаменов"
        });
        $('select[name="type"]').select2({
            placeholder: "Вариант экзамена"
        });
        $('select[name="res"]').select2({
            placeholder: "Результат экзамена"
        });
        $('select[name="resultExam"]').select2({
            placeholder: "Результат экзамена"
        });
        $('select[name="month"]').select2({
            placeholder: "Месяц"
        });
        $('select[name="years"]').select2({
            placeholder: "Год"
        }); // Сброс

        $('.cancelClick').on('click', function () {
            $('.filter input').val(null);
            $('.select2').val("").trigger("change");
        });
        $(".datepicker").datepicker({
            dateFormat: 'dd.mm.yy',
            changeMonth: true,
            changeYear: true
        }); // diagramms
    });
})(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,



$(function(){

    $("body").on('change', '#reg', function (e)
    {
        getLocations({ 'id': $(this).val() })
    })

    $("body").on('change', '#loc', function (e)
    {
        getExamType({ 'id': $(this).val() })
    })

    function getLocations(params) {

        var query = {
            c: 'rns:exam_results',
            mode: 'class',
            action: 'getLocations',
            sessid: BX.message('bitrix_sessid')
        };

        var data = {
            param: params,
        };

        var request = $.ajax({
            url: '/bitrix/services/main/ajax.php?' + $.param(query, true),
            method: 'POST',
            data: data,
            cache: false,
        });

        request.done(function(response) {

            if(response.status == 'success'){
                if(Object.keys(response.data).length){

                    let loc = $('#loc');
                    loc.removeAttr('disabled');
                    for(let val in response.data){
                        loc.append('<option value="'+response.data[val]['UF_XML_ID']+'">'+response.data[val]['UF_NAME']+'</option>');
                    }
                }
            }
        });
    }

    function getExamType(params) {

        var query = {
            c: 'rns:exam_results',
            mode: 'class',
            action: 'getExamType',
            sessid: BX.message('bitrix_sessid')
        };

        var data = {
            param: params,
        };

        var request = $.ajax({
            url: '/bitrix/services/main/ajax.php?' + $.param(query, true),
            method: 'POST',
            data: data,
            cache: false,
        });

        request.done(function(response) {

            if(response.status == 'success'){
                if(Object.keys(response.data).length){

                    let type = $('#type');
                    type.removeAttr('disabled');
                    for(let val in response.data){
                        type.append('<option value="'+response.data[val]['UF_XML_ID']+'">'+response.data[val]['UF_NAME']+'</option>');
                    }
                }
            }
        });
    }
});